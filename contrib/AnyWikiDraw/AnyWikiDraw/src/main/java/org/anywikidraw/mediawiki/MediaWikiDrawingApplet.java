/*
 * @(#)MediaWikiDrawingApplet.java
 *
 * Copyright (c) 2007-2008 by the original authors of AnyWikiDraw
 * and all its contributors.
 * All rights reserved.
 *
 * The copyright of this software is owned by the authors and  
 * contributors of the AnyWikiDraw project ("the copyright holders").  
 * You may not use, copy or modify this software, except in  
 * accordance with the license agreement you entered into with  
 * the copyright holders. For details see accompanying license terms. 
 */

package org.anywikidraw.mediawiki;

import java.awt.*;
import java.awt.image.*;
import java.text.MessageFormat;
import java.util.*;
import javax.swing.*;
import org.jhotdraw.draw.*;
import org.anywikidraw.any.*;
import org.jhotdraw.samples.svg.figures.*;
import org.jhotdraw.samples.svg.io.*;
import org.jhotdraw.geom.*;
import org.jhotdraw.samples.svg.gui.DrawingComponent;
import static org.jhotdraw.samples.svg.SVGAttributeKeys.*;
/**
 * MediaWikiDrawingApplet.
 *
 *
 * @author Werner Randelshofer
 * @version $Id: MediaWikiDrawingApplet.java 118 2009-06-27 11:07:27Z rawcoder $
 * <br>1.0 March 31, 2007 Created.
 */
public class MediaWikiDrawingApplet extends AbstractDrawingApplet {
    public MediaWikiDrawingApplet() {
        setName(MessageFormat.format(
                "AnyWikiDraw {0} for MediaWiki", getVersion()
                ));
    }
    
    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                MediaWikiDrawingApplet applet = new MediaWikiDrawingApplet();
                JFrame f = new JFrame(applet.getName());
                f.getContentPane().setLayout(new BorderLayout());
                f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                f.getContentPane().add(applet, BorderLayout.CENTER);
                f.setSize(400, 400);
                applet.init();
                f.setVisible(true);
            }
        });
    }
    
    /**
     * Creates the drawing.
     */
    @Override protected Drawing createDrawing() {
        DefaultDrawing drawing = new DefaultDrawing();
        LinkedList<InputFormat> inputFormats = new LinkedList<InputFormat>();
        inputFormats.add(new SVGZInputFormat());
        inputFormats.add(new ImageInputFormat(new SVGImageFigure()));
        inputFormats.add(new ImageInputFormat(new SVGImageFigure(),"JPEG","JPEG","jpg",BufferedImage.TYPE_INT_RGB));
        LinkedList<OutputFormat> outputFormats = new LinkedList<OutputFormat>();
        outputFormats.add(new SVGOutputFormat());
        outputFormats.add(new SVGZOutputFormat());
        outputFormats.add(new ImageOutputFormat());
        outputFormats.add(new ImageOutputFormat("JPG","Joint Photographics Experts Group (JPEG)", "jpg", BufferedImage.TYPE_INT_RGB));
        outputFormats.add(new ImageOutputFormat("BMP","Windows Bitmap (BMP)", "bmp", BufferedImage.TYPE_BYTE_INDEXED));
        drawing.setInputFormats(inputFormats);
        drawing.setOutputFormats(outputFormats);
        
        if (getParameter("DrawingWidth") != null &&
                getParameter("DrawingHeight") != null) {
            try {
                double imageWidth = Double.parseDouble(getParameter("DrawingWidth"));
                double imageHeight = Double.parseDouble(getParameter("DrawingHeight"));
                if (imageWidth > 0 && imageHeight > 0) {
                    CANVAS_WIDTH.set(drawing, imageWidth);
                    CANVAS_HEIGHT.set(drawing, imageHeight);
                }
            } catch (NumberFormatException e) {
                
            }
        }
        
        return drawing;
    }
    @Override protected DrawingComponent createDrawingComponent() {
        return new DrawingPanel();
    }
    @Override protected DrawingPanel getDrawingComponent() {
        return (DrawingPanel) super.getDrawingComponent();
    }
    

    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
