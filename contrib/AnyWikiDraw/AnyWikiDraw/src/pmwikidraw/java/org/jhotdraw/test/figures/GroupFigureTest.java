/*
 * @(#)Test.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package org.jhotdraw.test.figures;

import org.jhotdraw.figures.GroupFigure;
import junit.framework.TestCase;
// JUnitDoclet begin import
// JUnitDoclet end import

/*
 * Generated by JUnitDoclet, a tool provided by
 * ObjectFab GmbH under LGPL.
 * Please see www.junitdoclet.org, www.gnu.org
 * and www.objectfab.de for informations about
 * the tool, the licence and the authors.
 */


// JUnitDoclet begin javadoc_class
/**
 * TestCase GroupFigureTest is generated by
 * JUnitDoclet to hold the tests for GroupFigure.
 * @see org.jhotdraw.figures.GroupFigure
 */
// JUnitDoclet end javadoc_class
public class GroupFigureTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  // instance variables, helper methods, ... put them in this marker
  private GroupFigure groupfigure;
  // JUnitDoclet end class
  
  /**
   * Constructor GroupFigureTest is
   * basically calling the inherited constructor to
   * initiate the TestCase for use by the Framework.
   */
  public GroupFigureTest(String name) {
    // JUnitDoclet begin method GroupFigureTest
    super(name);
    // JUnitDoclet end method GroupFigureTest
  }
  
  /**
   * Factory method for instances of the class to be tested.
   */
  public GroupFigure createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new GroupFigure();
    // JUnitDoclet end method testcase.createInstance
  }
  
  /**
   * Method setUp is overwriting the framework method to
   * prepare an instance of this TestCase for a single test.
   * It's called from the JUnit framework only.
   */
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    groupfigure = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  /**
   * Method tearDown is overwriting the framework method to
   * clean up after each single test of this TestCase.
   * It's called from the JUnit framework only.
   */
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    groupfigure = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  // JUnitDoclet begin javadoc_method canConnect()
  /**
   * Method testCanConnect is testing canConnect
   * @see org.jhotdraw.figures.GroupFigure#canConnect()
   */
  // JUnitDoclet end javadoc_method canConnect()
  public void testCanConnect() throws Exception {
    // JUnitDoclet begin method canConnect
    // JUnitDoclet end method canConnect
  }
  
  // JUnitDoclet begin javadoc_method displayBox()
  /**
   * Method testDisplayBox is testing displayBox
   * @see org.jhotdraw.figures.GroupFigure#displayBox()
   */
  // JUnitDoclet end javadoc_method displayBox()
  public void testDisplayBox() throws Exception {
    // JUnitDoclet begin method displayBox
    // JUnitDoclet end method displayBox
  }
  
  // JUnitDoclet begin javadoc_method basicDisplayBox()
  /**
   * Method testBasicDisplayBox is testing basicDisplayBox
   * @see org.jhotdraw.figures.GroupFigure#basicDisplayBox(java.awt.Point, java.awt.Point)
   */
  // JUnitDoclet end javadoc_method basicDisplayBox()
  public void testBasicDisplayBox() throws Exception {
    // JUnitDoclet begin method basicDisplayBox
    // JUnitDoclet end method basicDisplayBox
  }
  
  // JUnitDoclet begin javadoc_method decompose()
  /**
   * Method testDecompose is testing decompose
   * @see org.jhotdraw.figures.GroupFigure#decompose()
   */
  // JUnitDoclet end javadoc_method decompose()
  public void testDecompose() throws Exception {
    // JUnitDoclet begin method decompose
    // JUnitDoclet end method decompose
  }
  
  // JUnitDoclet begin javadoc_method handles()
  /**
   * Method testHandles is testing handles
   * @see org.jhotdraw.figures.GroupFigure#handles()
   */
  // JUnitDoclet end javadoc_method handles()
  public void testHandles() throws Exception {
    // JUnitDoclet begin method handles
    // JUnitDoclet end method handles
  }
  
  // JUnitDoclet begin javadoc_method setAttribute()
  /**
   * Method testSetAttribute is testing setAttribute
   * @see org.jhotdraw.figures.GroupFigure#setAttribute(java.lang.String, java.lang.Object)
   */
  // JUnitDoclet end javadoc_method setAttribute()
  public void testSetAttribute() throws Exception {
    // JUnitDoclet begin method setAttribute
    // JUnitDoclet end method setAttribute
  }
  
  
  
  // JUnitDoclet begin javadoc_method testVault
  /**
   * JUnitDoclet moves marker to this method, if there is not match
   * for them in the regenerated code and if the marker is not empty.
   * This way, no test gets lost when regenerating after renaming.
   * <b>Method testVault is supposed to be empty.</b>
   */
  // JUnitDoclet end javadoc_method testVault
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  

}
