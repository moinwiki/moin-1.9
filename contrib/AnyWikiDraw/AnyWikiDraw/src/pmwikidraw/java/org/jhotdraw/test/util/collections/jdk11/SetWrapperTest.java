/*
 * @(#)Test.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	© by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package org.jhotdraw.test.util.collections.jdk11;

import org.jhotdraw.util.collections.jdk11.SetWrapper;
import junit.framework.TestCase;
// JUnitDoclet begin import
// JUnitDoclet end import

/*
 * Generated by JUnitDoclet, a tool provided by
 * ObjectFab GmbH under LGPL.
 * Please see www.junitdoclet.org, www.gnu.org
 * and www.objectfab.de for informations about
 * the tool, the licence and the authors.
 */

// JUnitDoclet begin javadoc_class
/**
 * TestCase SetWrapperTest is generated by
 * JUnitDoclet to hold the tests for SetWrapper.
 * @see org.jhotdraw.util.collections.jdk11.SetWrapper
 */
// JUnitDoclet end javadoc_class
public class SetWrapperTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
	// JUnitDoclet begin class
	// instance variables, helper methods, ... put them in this marker
	private SetWrapper setwrapper;
	// JUnitDoclet end class

	/**
	 * Constructor SetWrapperTest is
	 * basically calling the inherited constructor to
	 * initiate the TestCase for use by the Framework.
	 */
	public SetWrapperTest(String name) {
		// JUnitDoclet begin method SetWrapperTest
		super(name);
		// JUnitDoclet end method SetWrapperTest
	}

	/**
	 * Factory method for instances of the class to be tested.
	 */
	public SetWrapper createInstance() throws Exception {
		// JUnitDoclet begin method testcase.createInstance
		return new SetWrapper();
		// JUnitDoclet end method testcase.createInstance
	}

	/**
	 * Method setUp is overwriting the framework method to
	 * prepare an instance of this TestCase for a single test.
	 * It's called from the JUnit framework only.
	 */
	protected void setUp() throws Exception {
		// JUnitDoclet begin method testcase.setUp
		super.setUp();
		setwrapper = createInstance();
		// JUnitDoclet end method testcase.setUp
	}

	/**
	 * Method tearDown is overwriting the framework method to
	 * clean up after each single test of this TestCase.
	 * It's called from the JUnit framework only.
	 */
	protected void tearDown() throws Exception {
		// JUnitDoclet begin method testcase.tearDown
		setwrapper = null;
		super.tearDown();
		// JUnitDoclet end method testcase.tearDown
	}

	// JUnitDoclet begin javadoc_method size()
	/**
	 * Method testSize is testing size
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#size()
	 */
	// JUnitDoclet end javadoc_method size()
	public void testSize() throws Exception {
		// JUnitDoclet begin method size
		// JUnitDoclet end method size
	}

	// JUnitDoclet begin javadoc_method isEmpty()
	/**
	 * Method testIsEmpty is testing isEmpty
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#isEmpty()
	 */
	// JUnitDoclet end javadoc_method isEmpty()
	public void testIsEmpty() throws Exception {
		// JUnitDoclet begin method isEmpty
		// JUnitDoclet end method isEmpty
	}

	// JUnitDoclet begin javadoc_method contains()
	/**
	 * Method testContains is testing contains
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#contains(java.lang.Object)
	 */
	// JUnitDoclet end javadoc_method contains()
	public void testContains() throws Exception {
		// JUnitDoclet begin method contains
		// JUnitDoclet end method contains
	}

	// JUnitDoclet begin javadoc_method iterator()
	/**
	 * Method testIterator is testing iterator
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#iterator()
	 */
	// JUnitDoclet end javadoc_method iterator()
	public void testIterator() throws Exception {
		// JUnitDoclet begin method iterator
		// JUnitDoclet end method iterator
	}

	// JUnitDoclet begin javadoc_method toArray()
	/**
	 * Method testToArray is testing toArray
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#toArray()
	 */
	// JUnitDoclet end javadoc_method toArray()
	public void testToArray() throws Exception {
		// JUnitDoclet begin method toArray
		// JUnitDoclet end method toArray
	}

	// JUnitDoclet begin javadoc_method add()
	/**
	 * Method testAdd is testing add
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#add(java.lang.Object)
	 */
	// JUnitDoclet end javadoc_method add()
	public void testAdd() throws Exception {
		// JUnitDoclet begin method add
		// JUnitDoclet end method add
	}

	// JUnitDoclet begin javadoc_method remove()
	/**
	 * Method testRemove is testing remove
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#remove(java.lang.Object)
	 */
	// JUnitDoclet end javadoc_method remove()
	public void testRemove() throws Exception {
		// JUnitDoclet begin method remove
		// JUnitDoclet end method remove
	}

	// JUnitDoclet begin javadoc_method containsAll()
	/**
	 * Method testContainsAll is testing containsAll
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#containsAll(java.util.Collection)
	 */
	// JUnitDoclet end javadoc_method containsAll()
	public void testContainsAll() throws Exception {
		// JUnitDoclet begin method containsAll
		// JUnitDoclet end method containsAll
	}

	// JUnitDoclet begin javadoc_method addAll()
	/**
	 * Method testAddAll is testing addAll
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#addAll(java.util.Collection)
	 */
	// JUnitDoclet end javadoc_method addAll()
	public void testAddAll() throws Exception {
		// JUnitDoclet begin method addAll
		// JUnitDoclet end method addAll
	}

	// JUnitDoclet begin javadoc_method retainAll()
	/**
	 * Method testRetainAll is testing retainAll
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#retainAll(java.util.Collection)
	 */
	// JUnitDoclet end javadoc_method retainAll()
	public void testRetainAll() throws Exception {
		// JUnitDoclet begin method retainAll
		// JUnitDoclet end method retainAll
	}

	// JUnitDoclet begin javadoc_method removeAll()
	/**
	 * Method testRemoveAll is testing removeAll
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#removeAll(java.util.Collection)
	 */
	// JUnitDoclet end javadoc_method removeAll()
	public void testRemoveAll() throws Exception {
		// JUnitDoclet begin method removeAll
		// JUnitDoclet end method removeAll
	}

	// JUnitDoclet begin javadoc_method clear()
	/**
	 * Method testClear is testing clear
	 * @see org.jhotdraw.util.collections.jdk11.SetWrapper#clear()
	 */
	// JUnitDoclet end javadoc_method clear()
	public void testClear() throws Exception {
		// JUnitDoclet begin method clear
		// JUnitDoclet end method clear
	}

	// JUnitDoclet begin javadoc_method testVault
	/**
	 * JUnitDoclet moves marker to this method, if there is not match
	 * for them in the regenerated code and if the marker is not empty.
	 * This way, no test gets lost when regenerating after renaming.
	 * <b>Method testVault is supposed to be empty.</b>
	 */
	// JUnitDoclet end javadoc_method testVault
	public void testVault() throws Exception {
		// JUnitDoclet begin method testcase.testVault
		// JUnitDoclet end method testcase.testVault
	}

}
